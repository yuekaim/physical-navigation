{"ast":null,"code":"var _jsxFileName = \"/Users/cleo/Downloads/3967f67f-4926-40c9-b3bd-57589e12868f/src/ScaledLetter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScaledLetter = _ref => {\n  _s();\n  let {\n    letter,\n    color\n  } = _ref;\n  const containerRef = useRef(null);\n  const letterRef = useRef(null);\n  const [widthScale, setWidthScale] = useState(1);\n  const [heightScale, setHeightScale] = useState(1);\n  useEffect(() => {\n    const updateScale = () => {\n      if (containerRef.current && letterRef.current) {\n        // Get dimensions of the container\n        const containerWidth = containerRef.current.offsetWidth;\n        const containerHeight = containerRef.current.offsetHeight;\n\n        // Get actual size of the letter\n        const letterWidth = letterRef.current.offsetWidth;\n        const letterHeight = letterRef.current.offsetHeight;\n        console.log(letterWidth, letterHeight);\n\n        // Calculate the scale factor to fit the letter within the container\n        const calcWidthScale = containerWidth / letterWidth;\n        const calcHeightScale = containerHeight / letterHeight;\n        setWidthScale(calcWidthScale);\n        setHeightScale(calcHeightScale);\n      }\n    };\n\n    // Create a ResizeObserver to handle container resizing\n    const resizeObserver = new ResizeObserver(updateScale);\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    // Initial scale calculation on mount\n    updateScale();\n\n    // Cleanup on unmount\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [letter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      width: \"100%\",\n      // Allows container to fill parent width\n      height: \"100%\",\n      // Allows container to fill parent height\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      overflow: \"hidden\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: letterRef,\n      style: {\n        transform: `scale(${widthScale}, ${heightScale})`,\n        transformOrigin: \"center\",\n        whiteSpace: \"nowrap\",\n        color: color,\n        lineHeight: \"0.7\"\n      },\n      children: letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ScaledLetter, \"H6HtiHTXOzTGtklasdhX2PvKs/g=\");\n_c = ScaledLetter;\nexport default ScaledLetter;\nvar _c;\n$RefreshReg$(_c, \"ScaledLetter\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ScaledLetter","_ref","_s","letter","color","containerRef","letterRef","widthScale","setWidthScale","heightScale","setHeightScale","updateScale","current","containerWidth","offsetWidth","containerHeight","offsetHeight","letterWidth","letterHeight","console","log","calcWidthScale","calcHeightScale","resizeObserver","ResizeObserver","observe","disconnect","ref","style","width","height","display","alignItems","justifyContent","overflow","children","transform","transformOrigin","whiteSpace","lineHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cleo/Downloads/3967f67f-4926-40c9-b3bd-57589e12868f/src/ScaledLetter.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\ntype ScaledLetterProps = {\n  letter: string;\n  color: string;\n};\n\nconst ScaledLetter: React.FC<ScaledLetterProps> = ({ letter, color }) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const letterRef = useRef<HTMLDivElement>(null);\n  const [widthScale, setWidthScale] = useState(1);\n  const [heightScale, setHeightScale] = useState(1);\n\n  useEffect(() => {\n    const updateScale = () => {\n      if (containerRef.current && letterRef.current) {\n        // Get dimensions of the container\n        const containerWidth = containerRef.current.offsetWidth;\n        const containerHeight = containerRef.current.offsetHeight;\n\n        // Get actual size of the letter\n        const letterWidth = letterRef.current.offsetWidth;\n        const letterHeight = letterRef.current.offsetHeight;\n        console.log(letterWidth, letterHeight);\n\n        // Calculate the scale factor to fit the letter within the container\n        const calcWidthScale = containerWidth / letterWidth;\n        const calcHeightScale = containerHeight / letterHeight;\n\n        setWidthScale(calcWidthScale);\n        setHeightScale(calcHeightScale);\n      }\n    };\n\n    // Create a ResizeObserver to handle container resizing\n    const resizeObserver = new ResizeObserver(updateScale);\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    // Initial scale calculation on mount\n    updateScale();\n\n    // Cleanup on unmount\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [letter]);\n\n  return (\n    <div\n      ref={containerRef}\n      style={{\n        width: \"100%\", // Allows container to fill parent width\n        height: \"100%\", // Allows container to fill parent height\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        overflow: \"hidden\",\n      }}\n    >\n      <div\n        ref={letterRef}\n        style={{\n          transform: `scale(${widthScale}, ${heightScale})`,\n          transformOrigin: \"center\",\n          whiteSpace: \"nowrap\",\n          color: color,\n          lineHeight: \"0.7\",\n        }}\n      >\n        {letter}\n      </div>\n    </div>\n  );\n};\n\nexport default ScaledLetter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3D,MAAMC,YAAyC,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAClE,MAAMI,YAAY,GAAGV,MAAM,CAAiB,IAAI,CAAC;EACjD,MAAMW,SAAS,GAAGX,MAAM,CAAiB,IAAI,CAAC;EAC9C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIN,YAAY,CAACO,OAAO,IAAIN,SAAS,CAACM,OAAO,EAAE;QAC7C;QACA,MAAMC,cAAc,GAAGR,YAAY,CAACO,OAAO,CAACE,WAAW;QACvD,MAAMC,eAAe,GAAGV,YAAY,CAACO,OAAO,CAACI,YAAY;;QAEzD;QACA,MAAMC,WAAW,GAAGX,SAAS,CAACM,OAAO,CAACE,WAAW;QACjD,MAAMI,YAAY,GAAGZ,SAAS,CAACM,OAAO,CAACI,YAAY;QACnDG,OAAO,CAACC,GAAG,CAACH,WAAW,EAAEC,YAAY,CAAC;;QAEtC;QACA,MAAMG,cAAc,GAAGR,cAAc,GAAGI,WAAW;QACnD,MAAMK,eAAe,GAAGP,eAAe,GAAGG,YAAY;QAEtDV,aAAa,CAACa,cAAc,CAAC;QAC7BX,cAAc,CAACY,eAAe,CAAC;MACjC;IACF,CAAC;;IAED;IACA,MAAMC,cAAc,GAAG,IAAIC,cAAc,CAACb,WAAW,CAAC;IACtD,IAAIN,YAAY,CAACO,OAAO,EAAE;MACxBW,cAAc,CAACE,OAAO,CAACpB,YAAY,CAACO,OAAO,CAAC;IAC9C;;IAEA;IACAD,WAAW,CAAC,CAAC;;IAEb;IACA,OAAO,MAAM;MACXY,cAAc,CAACG,UAAU,CAAC,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,CAACvB,MAAM,CAAC,CAAC;EAEZ,oBACEJ,OAAA;IACE4B,GAAG,EAAEtB,YAAa;IAClBuB,KAAK,EAAE;MACLC,KAAK,EAAE,MAAM;MAAE;MACfC,MAAM,EAAE,MAAM;MAAE;MAChBC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,QAAQ,EAAE;IACZ,CAAE;IAAAC,QAAA,eAEFpC,OAAA;MACE4B,GAAG,EAAErB,SAAU;MACfsB,KAAK,EAAE;QACLQ,SAAS,EAAE,SAAS7B,UAAU,KAAKE,WAAW,GAAG;QACjD4B,eAAe,EAAE,QAAQ;QACzBC,UAAU,EAAE,QAAQ;QACpBlC,KAAK,EAAEA,KAAK;QACZmC,UAAU,EAAE;MACd,CAAE;MAAAJ,QAAA,EAEDhC;IAAM;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzC,EAAA,CApEIF,YAAyC;AAAA4C,EAAA,GAAzC5C,YAAyC;AAsE/C,eAAeA,YAAY;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}